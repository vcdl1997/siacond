{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/enums/PublicRoutes.ts","./src/app/core/guards/logged-out.guard.ts","./src/app/core/guards/logged.guard.ts","./src/app/data/service/auth-service.service.ts","./src/app/layout/footer/footer.component.ts","./src/app/layout/footer/footer.component.html","./src/app/layout/header/header.component.ts","./src/app/layout/header/header.component.html","./src/app/modules/auth/auth.component.ts","./src/app/modules/auth/auth.component.html","./src/app/modules/select-condominium/select-condominium.component.ts","./src/app/modules/select-condominium/select-condominium.component.html","./src/app/shared/util/token-util.ts","./src/environments/environment.development.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthComponent } from './modules/auth/auth.component';\r\nimport { SelectCondominiumComponent } from './modules/select-condominium/select-condominium.component';\r\nimport { LoggedOutGuard } from './core/guards/logged-out.guard';\r\nimport { LoggedGuard } from './core/guards/logged.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'login',\r\n    component: AuthComponent,\r\n    canActivate: [LoggedOutGuard]\r\n  },\r\n  {\r\n    path: 'selecionar-condominio',\r\n    component: SelectCondominiumComponent,\r\n    canActivate: [LoggedGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\r\n\r\n\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n})\r\nexport class AppComponent {\r\n  constructor(router:Router) {\r\n    router.navigate(['/login']);\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {HttpClientModule} from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './layout/header/header.component';\r\nimport { FooterComponent } from './layout/footer/footer.component';\r\nimport { AuthComponent } from './modules/auth/auth.component';\r\nimport { SelectCondominiumComponent } from './modules/select-condominium/select-condominium.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    AuthComponent,\r\n    SelectCondominiumComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export enum PublicRoutes {\r\n  LOGIN = 'login',\r\n  RENEW_TOKEN = 'renew-token',\r\n}\r\n","import { CanActivateFn } from '@angular/router';\nimport { TokenUtil } from 'src/app/shared/util/token-util';\n\nexport const LoggedOutGuard: CanActivateFn = (route, state) => {\n  const tokenUtil = new TokenUtil();\n  return !tokenUtil.tokenExists();\n};\n","import { CanActivateFn } from '@angular/router';\nimport { TokenUtil } from 'src/app/shared/util/token-util';\n\nexport const LoggedGuard: CanActivateFn = (route, state) => {\n  const tokenUtil = new TokenUtil();\n  return tokenUtil.tokenExists();\n};\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PublicRoutes } from 'src/app/core/enums/PublicRoutes';\nimport { environment } from 'src/environments/environment.development';\nimport { Login } from '../schema/login';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http : HttpClient) {\n  }\n\n  public login(login: Login) :Observable<Object>\n  {\n    let headers_object = new HttpHeaders();\n    headers_object.append('Content-Type', 'application/json');\n    headers_object.append(\"Access-Control-Allow-Origin\", \"*\");\n\n    const httpOptions = {\n      headers: headers_object\n    };\n\n    return this.http.post(`${environment.baseUrl}/${PublicRoutes.LOGIN}`, login, httpOptions);\n  }\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent {\r\n\r\n}\r\n","<p>footer works!</p>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent {\r\n\r\n}\r\n","<p>header works!</p>\r\n","import { AuthService } from './../../data/service/auth-service.service';\r\nimport { Component } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Login } from 'src/app/data/schema/login';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.css']\r\n})\r\nexport class AuthComponent {\r\n\r\n  private readonly authService: AuthService;\r\n\r\n  constructor(\r\n    authService: AuthService\r\n  ){\r\n    this.authService = authService;\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    const {username, password} = form.value;\r\n    const login: Login = {\r\n      'username': username,\r\n      'password': password\r\n    };\r\n\r\n    if(!this.validateUsername(username) || !this.validatePassword(password)){\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: \"Usuário ou Senha Inválidos!\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.authService.login(login).subscribe((response) => {\r\n      console.log(response);\r\n    },\r\n    (err) => {console.log(err)});\r\n  }\r\n\r\n  private validateUsername(username: string) :boolean\r\n  {\r\n    return username.length >= 3 &&  username.length <= 320;\r\n  }\r\n\r\n  private validatePassword(password: string) :boolean\r\n  {\r\n    const allowedSize = password.length >= 8 &&  password.length <= 100;\r\n    const containsLetters = new RegExp(/[a-zA-Z]+/).test(password);\r\n    const containsNumbers = new RegExp(/\\d/).test(password);\r\n    const containsSpecialCharacters = new RegExp(/[`!@#$%^&*()_+\\-=\\[\\]{};':\\\"\\\\|,.<>\\/?~]/).test(password);\r\n\r\n    return allowedSize && containsLetters && containsNumbers && containsSpecialCharacters;\r\n  }\r\n}\r\n","<div class=\"login-header box-shadow\">\r\n    <div class=\"container-fluid d-flex justify-content-between align-items-center\">\r\n        <div class=\"brand-logo\">\r\n            <a href=\"login.html\">\r\n                <img src=\"./public/assets/images/svg/deskapp-logo.svg\" alt=\"\" />\r\n            </a>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"login-wrap d-flex align-items-center flex-wrap justify-content-center\">\r\n    <div class=\"container\">\r\n        <div class=\"row align-items-center\">\r\n            <div class=\"col-md-6 col-lg-7\">\r\n                <img src=\"./public/assets/images/png/login-page-img.png\" alt=\"\" />\r\n            </div>\r\n            <div class=\"col-md-6 col-lg-5\">\r\n                <div class=\"login-box bg-white box-shadow border-radius-10\">\r\n                    <div class=\"login-title\">\r\n                        <h2 class=\"text-center text-primary\">Selecione o perfil de acesso</h2>\r\n                    </div>\r\n                    <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\r\n                        <div class=\"select-role\">\r\n                            <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\r\n                                <label class=\"btn active\">\r\n                                    <input type=\"radio\" name=\"options\" id=\"admin\" />\r\n                                    <div class=\"icon\">\r\n                                        <img src=\"./public/assets/images/svg/briefcase.svg\" class=\"svg\" alt=\"\" />\r\n                                    </div>\r\n                                    <span>Sou um</span>\r\n                                    Administrador\r\n                                </label>\r\n                                <label class=\"btn\">\r\n                                    <input type=\"radio\" name=\"options\" id=\"user\" />\r\n                                    <div class=\"icon\">\r\n                                        <img src=\"./public/assets/images/svg/person.svg\" class=\"svg\" alt=\"\" />\r\n                                    </div>\r\n                                    <span>Sou um</span>\r\n                                    Morador\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"input-group custom\">\r\n                            <input type=\"text\" name=\"username\" ngModel required #username=\"ngModel\" class=\"form-control form-control-lg\" placeholder=\"Usuário\" />\r\n                            <div class=\"input-group-append custom\">\r\n                                <span class=\"input-group-text\">\r\n                                    <i class=\"icon-copy dw dw-user1\"></i>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"input-group custom\">\r\n                            <input type=\"password\" name=\"password\" ngModel required #username=\"ngModel\" class=\"form-control form-control-lg\" placeholder=\"**********\" />\r\n                            <div class=\"input-group-append custom\">\r\n                                <span class=\"input-group-text\">\r\n                                    <i class=\"dw dw-padlock1\"></i>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row pb-30\">\r\n                            <div class=\"col-6\"></div>\r\n                            <div class=\"col-6\">\r\n                                <div class=\"forgot-password\">\r\n                                    <a href=\"forgot-password.html\">Esquece sua senha?</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"input-group mb-0\">\r\n                                    <button type=\"submit\" class=\"btn btn-primary btn-lg btn-block\">Entrar</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-select-condominium',\n  templateUrl: './select-condominium.component.html',\n  styleUrls: ['./select-condominium.component.css']\n})\nexport class SelectCondominiumComponent {\n\n}\n","<p>select-condominium works!</p>\n","export class TokenUtil {\n\n  tokenExists() :boolean\n  {\n    return localStorage.getItem('bearerToken') != null;\n  }\n\n  getToken(bearerToken: string)\n  {\n    return localStorage.getItem('bearerToken');\n  }\n\n  storeToken(bearerToken: string) :void\n  {\n    localStorage.setItem('bearerToken', bearerToken);\n  }\n}\n","export const environment = {\r\n  baseUrl: 'http://localhost:80/api'\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["RouterModule","AuthComponent","SelectCondominiumComponent","LoggedOutGuard","LoggedGuard","routes","path","component","canActivate","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports","AppComponent","constructor","router","navigate","i0","ɵɵdirectiveInject","Router","selectors","decls","vars","template","AppComponent_Template","rf","ctx","ɵɵelement","BrowserModule","HttpClientModule","HeaderComponent","FooterComponent","FormsModule","AppModule","bootstrap","declarations","PublicRoutes","TokenUtil","route","state","tokenUtil","tokenExists","HttpHeaders","environment","AuthService","http","login","headers_object","append","httpOptions","headers","post","baseUrl","LOGIN","ɵɵinject","HttpClient","factory","ɵfac","providedIn","FooterComponent_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","HeaderComponent_Template","Swal","authService","onSubmit","form","username","password","value","validateUsername","validatePassword","fire","icon","title","text","subscribe","response","console","log","err","length","allowedSize","containsLetters","RegExp","test","containsNumbers","containsSpecialCharacters","consts","AuthComponent_Template","ɵɵlistener","AuthComponent_Template_form_ngSubmit_15_listener","ɵɵrestoreView","_r3","_r0","ɵɵreference","ɵɵresetView","SelectCondominiumComponent_Template","localStorage","getItem","getToken","bearerToken","storeToken","setItem","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}